# -*- coding: utf-8 -*-
"""Pneumonia.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1srYkXYeuWyC157yS4SH6LRS9asYcymBd
"""

!pip install tensorflow-gpu

import tensorflow as tf
from tensorflow import keras
import numpy as np
import os
import matplotlib as mpl
import matplotlib.pyplot as plt
import pandas as pd

"""LOADING THE DATASET"""

!pip install kaggle

from google.colab import files
files.upload()

!mkdir -p ~/.kaggle
!cp kaggle.json ~/.kaggle/
!chmod 600 ~/.kaggle/kaggle.json

!kaggle datasets download -d paultimothymooney/chest-xray-pneumonia

import zipfile
with zipfile.ZipFile("chest-xray-pneumonia.zip","r") as zip_ref:
    zip_ref.extractall()

"""Loading the dataset"""

train_dir=r'/content/chest_xray/train'
validation_dir=r'/content/chest_xray/val'
test_dir=r'/content/chest_xray/test'

"""Generating Batches of tensor image data"""

from tensorflow.keras.preprocessing.image import ImageDataGenerator

train_datagen = ImageDataGenerator(rescale = 1./255)
test_datagen = ImageDataGenerator(rescale = 1./255)
 
train_generator = train_datagen.flow_from_directory(train_dir, target_size = (150,150), batch_size = 32, class_mode = 'binary')
 
valid_generator = test_datagen.flow_from_directory(validation_dir, target_size = (150,150), batch_size = 32, class_mode = 'binary')

"""Creating a CNN model"""

from tensorflow.keras import layers
from tensorflow.keras import models
from tensorflow.keras import optimizers
from tensorflow.keras.applications import VGG16

conv_base=VGG16(weights='imagenet',include_top=False,input_shape=(150,150,3))
conv_base.summary()
model = models.Sequential()
model.add(conv_base)
model.add(layers.Flatten())
model.add(layers.Dense(256,activation='relu'))
model.add(layers.Dense(1,activation='sigmoid'))
model.summary()

"""Compiling the model"""

model.compile(loss='binary_crossentropy', optimizer=optimizers.RMSprop(lr=1e-4),metrics=['acc'])

"""Fitting the model"""

from keras.callbacks import ModelCheckpoint
checkpoint_cb=keras.callbacks.ModelCheckpoint("Best_Model.h5",save_best_only=True)
history=model.fit_generator(train_generator,steps_per_epoch=132, epochs=20, validation_data=valid_generator, validation_steps=1,callbacks=[checkpoint_cb])

datagraph=pd.DataFrame(history.history)
datagraph

datagraph.plot(figsize=(20,6))
plt.grid(True)

"""Testing and model evaluation"""

test_generator=test_datagen.flow_from_directory(test_dir,target_size=(150,150),batch_size=32,class_mode='binary')

model.evaluate_generator(test_generator,steps=20)

from keras.preprocessing import image
 
img = image.load_img('/content/chest_xray/test/NORMAL/IM-0001-0001.jpeg',target_size=(150,150))
plt.imshow(img)
imgplot = plt.imshow(img)
x = image.img_to_array(img)
x = np.expand_dims(x, axis=0)
img_data = preprocess_input(x)
classes = model.predict(img_data)
New_pred = np.argmax(classes, axis=1)
if New_pred==[1]:
  print('Prediction: Normal')
else:
  print('Prediction: Corona')